name: CI/CD Pipeline

# Exécute les jobs sur des événements spécifiques
on:
  push:
    branches:
      - main     # La pipeline sera déclenchée sur un push dans la branche main
  pull_request:
    branches:
      - main     # Elle sera également déclenchée lors de pull requests vers main

# Définir les jobs à exécuter
jobs:
  # Job 1 : Build & Test Frontend (Angular)
  frontend:
    runs-on: ubuntu-latest   
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'   
    - name: Install dependencies (Frontend)
      run: |
        cd frontend
        npm install
    - name: Run tests (Frontend)
      run: |
        cd frontend
        npm run test -- --watch=false --browsers=ChromeHeadless

  # Job 2 : Build & Test Backend (Node.js)
  backend:
    runs-on: ubuntu-latest   # Conteneur Ubuntu pour le backend

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '23'   # Spécifiez la version de Node.js pour le backend
    - name: Install dependencies (Backend)
      run: |
        cd Backend
        npm install
    - name: Run tests (Backend)
      run: |
        cd Backend
        npm run test

  # Job 3 : Build & Push Docker images (pour un déploiement avec Docker)
  docker:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}  # Stockez votre username Docker Hub dans les secrets
        password: ${{ secrets.DOCKER_PASSWORD }}  # Stockez votre password Docker Hub dans les secrets
    - name: Build Docker image (Frontend)
      run: |
        cd frontend
        docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend:latest .
    - name: Build Docker image (Backend)
      run: |
        cd Backend
        docker build -t ${{ secrets.DOCKER_USERNAME }}/backend:latest .
    - name: Push Docker images
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/backend:latest

  # Job 4 : Déployer (exemple de déploiement sur un serveur)
  deploy:
    runs-on: ubuntu-latest
    needs: [frontend, backend, docker]  # Attendez que les jobs précédents soient terminés avant de déployer
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Deploy to server (exemple avec scp)
      run: |
        scp -r ./frontend user@server:/path/to/deploy/frontend
        scp -r ./Backend user@server:/path/to/deploy/backend
